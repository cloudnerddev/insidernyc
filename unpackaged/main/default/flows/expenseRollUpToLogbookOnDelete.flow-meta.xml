<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>addExpenses</name>
        <label>addExpenses</label>
        <locationX>396</locationX>
        <locationY>503</locationY>
        <assignmentItems>
            <assignToReference>totalExpenseAmount</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loopExpenses.Amount__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>billableDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>addToBillableAmount</name>
        <label>addToBillableAmount</label>
        <locationX>264</locationX>
        <locationY>719</locationY>
        <assignmentItems>
            <assignToReference>billableAmount</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loopExpenses.Amount__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopExpenses</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>billableDecision</name>
        <label>billableDecision</label>
        <locationX>396</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>loopExpenses</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>billable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loopExpenses.Billable_Expense__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Billable</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>addToBillableAmount</targetReference>
            </connector>
            <label>billable</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>expenseRollUpToLogbookOnDelete {!$Flow.CurrentDateTime}</interviewLabel>
    <label>expenseRollUpToLogbookOnDelete</label>
    <loops>
        <name>loopExpenses</name>
        <label>loopExpenses</label>
        <locationX>176</locationX>
        <locationY>395</locationY>
        <collectionReference>getRelatedExpenses</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>addExpenses</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>updateLogbook</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getRelatedExpenses</name>
        <label>getRelatedExpenses</label>
        <locationX>176</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>loopExpenses</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Logbook__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Logbook__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Logbook__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Expense__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>updateLogbook</name>
        <label>updateLogbook</label>
        <locationX>176</locationX>
        <locationY>995</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Logbook__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Total_Billable_Expenses__c</field>
            <value>
                <elementReference>billableAmount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Total_Expenses__c</field>
            <value>
                <elementReference>totalExpenseAmount</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getRelatedExpenses</targetReference>
        </connector>
        <object>Expense__c</object>
        <recordTriggerType>Delete</recordTriggerType>
        <triggerType>RecordBeforeDelete</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>billableAmount</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>totalExpenseAmount</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
