<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <decisions>
        <name>giftWrappingExpenseDecision</name>
        <label>giftWrappingExpenseDecision</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>createExpense</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>expenseFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getGiftWrappingExpenses.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>updateExpense</targetReference>
            </connector>
            <label>expenseFound</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>expenseAmount</name>
        <dataType>Currency</dataType>
        <expression>{!$Record.Number_of_Gifts__c} * 5</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>giftWrappingFlow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>giftWrappingFlow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>createExpense</name>
        <label>createExpense</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <inputAssignments>
            <field>Amount__c</field>
            <value>
                <elementReference>expenseAmount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Billable_Expense__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Client_Account__c</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description__c</field>
            <value>
                <stringValue>Gift Wrapping</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Invoice_Description__c</field>
            <value>
                <stringValue>Gift Wrapping</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Logbook__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type__c</field>
            <value>
                <stringValue>Gift Wrapping</stringValue>
            </value>
        </inputAssignments>
        <object>Expense__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>getGiftWrappingExpenses</name>
        <label>getGiftWrappingExpenses</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>giftWrappingExpenseDecision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Logbook__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Description__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Gift Wrapping</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Expense__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>updateExpense</name>
        <label>updateExpense</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getGiftWrappingExpenses.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Amount__c</field>
            <value>
                <elementReference>expenseAmount</elementReference>
            </value>
        </inputAssignments>
        <object>Expense__c</object>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getGiftWrappingExpenses</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Number_of_Gifts__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Number_of_Gifts__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
